swagger: "2.0"
info:
  description: "Swagger tutorial"
  version: "1.0.0"
  title: "Swagger tutorial"
basePath: "/service-api"
schemes:
- "http"
paths:
  /student:
    post:
      summary: "Add a new student"
      description: ""
      operationId: "addStudent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Student object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        200:
          description: "Successful operation"
          schema: 
            type: "integer"
            format: "int64"
        409:
          description: "Already exists"
        405:
          description: "Invalid input"

  /student/{student_id}:
    get:
      summary: "Find student by ID"
      description: "Returns a single student"
      operationId: "getStudentById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "student_id"
        in: "path"
        description: "ID of student to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "subject"
        in: "query"
        description: "The subject name"
        required: false
        type: string
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Student"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Student not found"
 
    delete:
     summary: "Delete student by ID"
     description: "Deletes a single student"
     operationId: "deleteStudent"
     produces:
     - "application/xml"
     - "application/json"
     parameters:
      - name: "student_id"
        in: "path"
        description: "ID of student to delete"
        required: true
        type: "integer"
        format: "int64"
     responses:
      200:
       description: "Successful operation"
       schema:
        $ref: "#/definitions/Student"
      400:
       description: "Invalid ID supplied"
      404:
       description: "Student not found"
       
  /student/:
    get:
      summary: "Find student by Last Name"
      description: "Returns a single student (Assumes unique names!)"
      operationId: "getStudentByLastName"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "last_name"
        in: "query"
        description: "Last name of the student to return"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Student"
        400:
          description: "Invalid Last Name supplied"
        404:
          description: "Student not found"

definitions:
 Student:
   type: "object"
   properties:
    student_id:
     type: integer
     format: int64
    first_name:
     type: string
    last_name:
     type: string
    grades:
     type: object
     additionalProperties:
      type: string
      
